//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/JacksonPlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @JacksonPlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @JacksonPlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""JacksonPlayerControls"",
    ""maps"": [
        {
            ""name"": ""jacksonControls"",
            ""id"": ""414c32af-a2e3-4411-9f81-5534919e83ff"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""57e6ae9e-b5f0-44c0-bffc-db69f3a0a971"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LightAttack"",
                    ""type"": ""Value"",
                    ""id"": ""63dffb36-118b-45f4-ba0a-e6f0fe1f0da5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Value"",
                    ""id"": ""40e80217-c59d-4678-90fd-bc8eb96d2de7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Lasso"",
                    ""type"": ""Value"",
                    ""id"": ""630ebbde-fef9-4a6e-a842-25017b675840"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dodgeroll"",
                    ""type"": ""Value"",
                    ""id"": ""bb5580cd-69cb-4532-838c-a1783169d557"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Value"",
                    ""id"": ""c86bd108-bded-4898-85e0-7d85d8030bd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""42e2847e-bf17-4f44-b553-f364ee612753"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraMove"",
                    ""type"": ""Value"",
                    ""id"": ""ce27ef76-6eb1-47f5-b1d9-f39664779551"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a07b896f-16cd-476e-a600-3452b2903f98"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""466d0d87-1503-4590-bf99-200165376ace"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3950c22e-5233-4ccd-837d-d9b972176fea"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d181ab8b-68fd-4f76-984a-f0dda69aeb95"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f5d3c29-f0a3-495b-a164-933ae4b1a1de"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac66764b-14e7-4086-9e88-052fc24af9d2"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""355cc30b-541b-4c3d-b31a-92534befa2d5"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lasso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba9e1cc0-7e33-4ce7-82b4-2b3cf70b8a05"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lasso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0e4dd54-7dbb-419a-b069-ef0ac3a2a82f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodgeroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3f58680-cf7b-4b69-8f16-a919928f8002"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodgeroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f98ebb0b-053b-4ef6-bba3-f6b691d0c73d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33f66d05-0dbe-4a28-98dd-c45f23884279"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37e67609-e735-478b-b975-fe36765dd382"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""ff8e2428-194e-4728-a467-91c89eb99881"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""50dafd66-b345-4a8f-a954-835be3b9602b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""08833095-c25f-44bb-a613-932860d6dfba"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b1caf1f1-5aed-4569-8c8e-efc4db1ffd30"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c92f9767-99d1-459c-84b9-9457aa525c0b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fbf66533-b045-4dd2-90ad-47c45430c440"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac760e1b-ef68-4141-926c-043b1164dfa3"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // jacksonControls
        m_jacksonControls = asset.FindActionMap("jacksonControls", throwIfNotFound: true);
        m_jacksonControls_Jump = m_jacksonControls.FindAction("Jump", throwIfNotFound: true);
        m_jacksonControls_LightAttack = m_jacksonControls.FindAction("LightAttack", throwIfNotFound: true);
        m_jacksonControls_HeavyAttack = m_jacksonControls.FindAction("HeavyAttack", throwIfNotFound: true);
        m_jacksonControls_Lasso = m_jacksonControls.FindAction("Lasso", throwIfNotFound: true);
        m_jacksonControls_Dodgeroll = m_jacksonControls.FindAction("Dodgeroll", throwIfNotFound: true);
        m_jacksonControls_Interact = m_jacksonControls.FindAction("Interact", throwIfNotFound: true);
        m_jacksonControls_Move = m_jacksonControls.FindAction("Move", throwIfNotFound: true);
        m_jacksonControls_CameraMove = m_jacksonControls.FindAction("CameraMove", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // jacksonControls
    private readonly InputActionMap m_jacksonControls;
    private IJacksonControlsActions m_JacksonControlsActionsCallbackInterface;
    private readonly InputAction m_jacksonControls_Jump;
    private readonly InputAction m_jacksonControls_LightAttack;
    private readonly InputAction m_jacksonControls_HeavyAttack;
    private readonly InputAction m_jacksonControls_Lasso;
    private readonly InputAction m_jacksonControls_Dodgeroll;
    private readonly InputAction m_jacksonControls_Interact;
    private readonly InputAction m_jacksonControls_Move;
    private readonly InputAction m_jacksonControls_CameraMove;
    public struct JacksonControlsActions
    {
        private @JacksonPlayerControls m_Wrapper;
        public JacksonControlsActions(@JacksonPlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_jacksonControls_Jump;
        public InputAction @LightAttack => m_Wrapper.m_jacksonControls_LightAttack;
        public InputAction @HeavyAttack => m_Wrapper.m_jacksonControls_HeavyAttack;
        public InputAction @Lasso => m_Wrapper.m_jacksonControls_Lasso;
        public InputAction @Dodgeroll => m_Wrapper.m_jacksonControls_Dodgeroll;
        public InputAction @Interact => m_Wrapper.m_jacksonControls_Interact;
        public InputAction @Move => m_Wrapper.m_jacksonControls_Move;
        public InputAction @CameraMove => m_Wrapper.m_jacksonControls_CameraMove;
        public InputActionMap Get() { return m_Wrapper.m_jacksonControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JacksonControlsActions set) { return set.Get(); }
        public void SetCallbacks(IJacksonControlsActions instance)
        {
            if (m_Wrapper.m_JacksonControlsActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnJump;
                @LightAttack.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLightAttack;
                @LightAttack.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLightAttack;
                @LightAttack.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLightAttack;
                @HeavyAttack.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnHeavyAttack;
                @HeavyAttack.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnHeavyAttack;
                @HeavyAttack.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnHeavyAttack;
                @Lasso.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLasso;
                @Lasso.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLasso;
                @Lasso.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnLasso;
                @Dodgeroll.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnDodgeroll;
                @Dodgeroll.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnDodgeroll;
                @Dodgeroll.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnDodgeroll;
                @Interact.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnInteract;
                @Move.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnMove;
                @CameraMove.started -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnCameraMove;
                @CameraMove.performed -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnCameraMove;
                @CameraMove.canceled -= m_Wrapper.m_JacksonControlsActionsCallbackInterface.OnCameraMove;
            }
            m_Wrapper.m_JacksonControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @LightAttack.started += instance.OnLightAttack;
                @LightAttack.performed += instance.OnLightAttack;
                @LightAttack.canceled += instance.OnLightAttack;
                @HeavyAttack.started += instance.OnHeavyAttack;
                @HeavyAttack.performed += instance.OnHeavyAttack;
                @HeavyAttack.canceled += instance.OnHeavyAttack;
                @Lasso.started += instance.OnLasso;
                @Lasso.performed += instance.OnLasso;
                @Lasso.canceled += instance.OnLasso;
                @Dodgeroll.started += instance.OnDodgeroll;
                @Dodgeroll.performed += instance.OnDodgeroll;
                @Dodgeroll.canceled += instance.OnDodgeroll;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @CameraMove.started += instance.OnCameraMove;
                @CameraMove.performed += instance.OnCameraMove;
                @CameraMove.canceled += instance.OnCameraMove;
            }
        }
    }
    public JacksonControlsActions @jacksonControls => new JacksonControlsActions(this);
    public interface IJacksonControlsActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnLightAttack(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnLasso(InputAction.CallbackContext context);
        void OnDodgeroll(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnCameraMove(InputAction.CallbackContext context);
    }
}
